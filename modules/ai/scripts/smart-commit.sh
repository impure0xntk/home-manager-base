#!/usr/bin/env bash

set -euo pipefail

# Default values
DRY_RUN=false
AUTO_COMMIT=false
CONFIRM='n'
MODEL=""

print_help() {
  cat >&2 <<EOF
Usage: $(basename "$0") [OPTIONS]

Options:
  -n, --dry-run     Show the generated commit message without committing
  -y, --yes         Auto-confirm commit without prompt
  -m, --model       Specify the model to use for commit message generation (default: none)
  -h, --help        Show this help message and exit
EOF
}

# Argument parsing
while [[ $# -gt 0 ]]; do
  case "$1" in
    --dry-run | -n)
      DRY_RUN=true
      shift
      ;;
    -y | --yes)
      AUTO_COMMIT=true
      shift
      ;;
    -m | --model)
      MODEL="$2"
      shift 2
      ;;
    -h | --help)
      print_help
      exit 0
      ;;
    *)
      echo "[ERROR] Unknown option: $1" >&2
      print_help
      exit 1
      ;;
  esac
done

# Get staged diff
DIFF=$(git diff --staged)
if [[ -z "$DIFF" ]]; then
  echo "[INFO] No staged changes found." >&2
  exit 1
fi

# Generate commit message with specified model
generate_commit_message() {
  local sgpt_args=(
    "--no-interaction"
    "--no-md"
    "--no-cache"
    "--role" "Commit Message Generator"
  )

  if [[ -n "$MODEL" ]]; then
    sgpt_args+=("--model" "$MODEL")
  fi

  echo "$DIFF" | sgpt "${sgpt_args[@]}"
}

if ! COMMIT_MESSAGE=$(generate_commit_message); then
  echo "[ERROR] Failed to generate commit message." >&2
  exit 1
fi

# Remove unnecessary lines. It may be caused by using sgpt from non-interactive shell.
# <think> </think> and empty lines is generated by thinking model. e.g. qwen3
COMMIT_MESSAGE=$(echo "$COMMIT_MESSAGE" | sed -E '/^<think>$/d; /^<\/think>$/d; /^[[:space:]]*$/d')

# Display generated message with magenta color
printf "\nGenerated message:\n\033[35m%s\033[m\n" "$COMMIT_MESSAGE"

if $DRY_RUN; then
  echo -e "\n[INFO] --dry-run enabled: No commit will be made."
  exit 0
fi

# Determine confirmation method
if [[ $AUTO_COMMIT == true ]]; then
  CONFIRM='y'
else
  read -rp "Proceed with commit? [y/N]: " CONFIRM
fi

# Proceed with commit if confirmed
if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
  # Remove ANSI escape codes
  CLEAN_MESSAGE=$(echo "$COMMIT_MESSAGE" | sed 's/\x1b\[[0-9;]*m//g')
  git commit -m "$CLEAN_MESSAGE"
  echo "[INFO] Committed successfully."
else
  echo "[INFO] Commit cancelled."
fi
